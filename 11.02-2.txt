製作docker images大概有兩種方式:

第一種就是先使用已經有的image,逕行操作...操作後再用docker commit製作新的image

第二種就是採用Dockerfile
直接用一個文字檔去描述你要執行的指令，它會自動去執行並完成

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
解釋程式碼

FROM ubuntu:14.04       使用哪個基礎鏡像
MAINTAINER bowwow <bowwow@gmail.com> 維護者 名字 <電子郵件>  這一行可以省略

ENV DEBIAN_FRONTEND noninteractive  環境變數 名稱 變數值   這邊是宣告環境變數
ENV HOME /root       這邊也是宣告環境變數

RUN sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list   這一行下面會解釋
          
RUN \
  apt-get update && \   更新
  apt-get install -y build-essential && \  安裝編譯工具
  apt-get install -y software-properties-common && \
  apt-get install -y byobu curl git htop man unzip vim wget && \  常用工具
  apt-get install -y xorg lxde-core lxterminal tightvncserver && \   安裝圖形化介面跟安裝vncserver
  rm -rf /var/lib/apt/lists/*

EXPOSE 5901  打開埠號5901
WORKDIR /root  切換/root 工作目錄下

CMD ["bash"]  執行bash

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

解釋這行 RUN sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list

解釋  /etc/apt/sources.list  這個檔案可以告訴系統 apt的雲端資料庫在哪裡

解釋 sed -i 的結構

sed   是stream editor     串流編輯器 純文字功能

一般我們會打這個指令 gedit /etc/selinux/config  把SELINUX=enforcing 改成 SELINUX=disabled 來做更改

我們用sed的方法

sed 's(替換的意思)/替換前的東西/用什麼東西做替換/替換的方式' 使用的檔案路徑

sed 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config   這個指令只會show出更改的結果，並不會更改原本的檔案

sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config  前面加 -i 就代表要連原本的檔案一起更動
~~~~~~~~~~~~~~~
解釋替換的方式:

假如文字有tom1tom2tom3

如果沒有打就代表只替換一次 's/tom/mary/' -->  mary1tom2tom3

如果打g就代表全部如果符合就替換 's/tom/mary/g' -->  mary1mary2mary3
~~~~~~~~~~~~~~~~~
解釋 's/# \(.*multiverse$\)/\1/g'

假設文字 # ahbadfjdkfdatom

在正則表達式中 
 . 代表任意字元  
 * 代表匹配前面的東西重複0次或是重複1次
 $ 代表以前面的東西當結尾
 ^ 代表以前面的東西當開頭

 .* 就代表匹配任意字元 

所以 # ahbadfjdkfdatom 用正則表達式會變成 # .*tom$
 
我要把 # 拿掉變成ahbadfjdkfdatom

用 's/# (.*tom$)/\1/g'
  
用()來框住你想要保留的東西 用\1指定第一個框框你想要保留
 
所以如果你有多個框框想保留 可以用/2 /3 ... 來保留第二個跟第三個
ex:'s/# ()  () () /\1\2\3/g'  

甚至想要把框框的位置互換 就可以用/2/1來互換
ex:'s/# ()  () () /\2\1\3/g'  這樣會互換位置

最後因為小括號是特殊符號所以要在前面加上\來把東西跳脫出去
's/# \(.*tom$\)/\1/g'   注意\是在括號前面

完整實作
echo "# ahbadfjdkfdatom" > 1.txt
sed -i 's/# \(.*tom$\)/\1/g' 1.txt
cat 1.txt 查看有沒有成功

現在來看 's/# \(.*multiverse$\)/\1/g' 就清楚多了

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在使用docker 其實每段程式碼都是鏡像 一個一個堆疊上去的
所以有些程式碼可以合併，來增加docker的效率  
所以 && 代表 前面的工作如果成功 後面的工作就會接著執行
     || 代表 前面的工作如果成功 後面的工作就不會執行 但 前面的工作如果失敗， 後面的工作就會執行
     ;  代表 不管前面的工作是否成功 後面的工作還是會執行



作業安裝firefox
 參考https://ubuntuqa.com/zh-tw/article/8451.html